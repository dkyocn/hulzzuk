<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="restMapper">

<resultMap type="location" id="resultList">
	<result property="locId" column="REST_ID" />
	<result property="placeName" column="REST_PLACENAME" />
	<result property="phone" column="REST_PHONE" />
	<result property="addressName" column="REST_ADDRESSNAME" />
	<result property="category" column="REST_CATEGORY" />
	<result property="x" column="REST_X" />
	<result property="y" column="REST_Y" />
	 <result property="imgPath" column="REST_IMAGE"/>
	<result property="restMenu" column="REST_MENU" />
	</resultMap>
	
	<!-- 총 갯수 -->
  <select id="getRestListCount" resultType="_int" parameterType="string">
    SELECT COUNT(*)
    FROM TB_REST
    <where>
      <if test="keyword != null and keyword != ''">
        (REST_PLACENAME LIKE '%' || #{keyword} || '%' OR REST_ADDRESSNAME LIKE '%' || #{keyword} || '%')
      </if>
    </where>
  </select>
  
	<!-- 맛집 리스트 조회: keyword 검색 + 정렬 -->
 <!--  <select id="getRestList" parameterType="hashMap" resultMap="resultList">
    SELECT A.REST_PLACENAME, A.REST_ROAD_ADDRESSNAME
    FROM TB_REST A
    <where>
      <if test="keyword != null and keyword != ''">
        (REST_PLACENAME LIKE '%' || #{keyword} || '%' OR REST_ROAD_ADDRESSNAME LIKE '%' || #{keyword} || '%')
      </if>
    </where>
    <choose>
      <when test="sortEnum == 'LOVEDESC'">
        ORDER BY (SELECT COUNT(*) FROM TB_LOVE L WHERE L.REST_ID = A.REST_ID) DESC
      </when>
      <when test="sortEnum == 'REVIEWDESC'">
        ORDER BY (SELECT COUNT(*) FROM TB_REVIEW R WHERE R.REST_ID = A.REST_ID) DESC
      </when>
      <when test="sortEnum == 'NAMEDESC'">
        ORDER BY REST_PLACENAME DESC
      </when>
      <otherwise>
        ORDER BY REST_PLACENAME ASC
      </otherwise>
    </choose>
     WHERE RNUM BETWEEN #{ paging.startRow } AND #{ paging.endRow }
  </select> -->
  
   <!-- 숙소 리스트 조회: keyword 검색 + 정렬 -->
  <select id="getRestPage" parameterType="hashMap" resultMap="resultList">
  SELECT * FROM ( SELECT ROWNUM AS RNUM, A.*
    								FROM ( SELECT A.REST_ID, A.REST_PLACENAME, A.REST_ADDRESSNAME, REST_IMAGE
      												FROM TB_REST A
												      <where>
												        <if test="keyword != null and keyword != ''">
												          (REST_PLACENAME LIKE '%' || #{keyword} || '%' OR REST_ADDRESSNAME LIKE '%' || #{keyword} || '%')
												        </if>
												      </where>
												      <choose>
												        <when test="sortEnum == 'LOVEDESC'">
												          ORDER BY (SELECT COUNT(*) FROM TB_LOVE L WHERE L.REST_ID = A.REST_ID) DESC
												        </when>
												        <when test="sortEnum == 'REVIEWDESC'">
												          ORDER BY (SELECT COUNT(*) FROM TB_REVIEW R WHERE R.REST_ID = A.REST_ID) DESC
												        </when>
												        <when test="sortEnum == 'NAMEDESC'">
												          ORDER BY REST_PLACENAME DESC
												        </when>
												        <otherwise>
												          ORDER BY REST_PLACENAME ASC
												        </otherwise>
												      </choose>
												    ) A
										)
  WHERE RNUM BETWEEN #{paging.startRow} AND #{paging.endRow}
</select>

  <!-- 상세 조회 -->
  <select id="getRestById" parameterType="string" resultMap="resultList">
    SELECT *
    FROM TB_REST
    WHERE REST_ID = #{ restId }
  </select>
  
     <!--  맛집명 조회 -->
 <select id="getRestName" parameterType="string" resultType="string">
    SELECT REST_PLACENAME
    FROM TB_REST
    WHERE REST_ID = #{restId}
  </select>

	<select id="getRestList" parameterType="hashMap" resultMap="resultList">
		select * from TB_REST
		<where>
			<if test="keyword != null and keyword != ''">
				(REST_PLACENAME LIKE '%' || #{keyword} || '%' OR REST_ADDRESSNAME LIKE '%' || #{keyword} || '%')
			</if>
		</where>
		order by REST_PLACENAME
	</select>
	
	<!--  맛집 추가  -->
	<insert id="insertRest" parameterType="hashMap" >
		insert into TB_REST(REST_ID, REST_PLACENAME, REST_ADDRESSNAME, REST_PHONE, REST_X, REST_Y, REST_CATEGORY, REST_MENU, REST_IMAGE)
		values(#{locId}, #{placeName}, #{addressName}, #{phone}, #{x}, #{y}, #{category}, #{restMenu}, #{imgPath})
	</insert>
	
	<!-- 맛집 top3 조회 -->
	<select id="getTop3REST" parameterType="hashMap" resultMap="resultList">
		SELECT R.REST_ID, R.REST_PLACENAME, R.REST_ADDRESSNAME, R.REST_IMAGE
  		FROM TB_REST R
  		LEFT JOIN (
   			SELECT REST_ID, COUNT(*) AS LOVE_CNT
    		FROM TB_LOVE
  			GROUP BY REST_ID
  		) L ON R.REST_ID = L.REST_ID
  		ORDER BY NVL(L.LOVE_CNT, 0) DESC
  		FETCH FIRST 3 ROWS ONLY
	</select>
	
  </mapper>
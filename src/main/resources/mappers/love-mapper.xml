<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loveMapper">
	
	<resultMap type="Love" id="resultList">
		<result property="loveId" column="LOVE_ID" />
		<result property="accoId" column="ACCO_ID" />
		<result property="restId" column="REST_ID" />
		<result property="attrId" column="ATTR_ID" />
		<result property="logId" column="LOG_ID" />
		<result property="userId" column="USER_ID" />
	</resultMap>
	
	<!-- 숙소 찜 등록용 쿼리 -->
	<insert id="insertAccoLove" parameterType="Love">
		insert into tb_love (ACCO_ID, USER_ID)
		values ( #{accoId}, #{userId} )
	</insert>
	
	<!-- 맛집 찜 등록용 쿼리 -->
	<insert id="insertRestLove" parameterType="Love">
		insert into tb_love (REST_ID, USER_ID)
		values ( #{restId}, #{userId})
	</insert>
	
	<!-- 즐길거리 찜 등록용 쿼리 -->
	<insert id="insertAttrLove" parameterType="Love">
		insert into tb_love (ATTR_ID, USER_ID)
		values ( #{attrId}, #{userId})
	</insert>
	
	<!-- 여행지 중복 확인용 쿼리 -->
	<select id="selectLoveExists" parameterType="Love" resultType="int">
	    select count(*)
	    from tb_love
	    where user_id = #{userId}
	    <choose>
	        <when test="accoId != null">AND acco_id = #{accoId}</when>
	        <when test="restId != null">AND rest_id = #{restId}</when>
	        <when test="attrId != null">AND attr_id = #{attrId}</when>
	    </choose>
	</select>

	<!-- 여행지 찜 개수 조회 -->
	<select id="getLocLoveCount" resultType="int">
    	select count(*) from tb_love
	    <where>
	        <choose>
	            <when test="locationEnum.equals('ACCO')">acco_id = #{locId}</when>
			    <when test="locationEnum.equals('REST')">rest_id = #{locId}</when>
			    <when test="locationEnum.equals('ATTR')">attr_id = #{locId}</when>
	        </choose>
	    </where>
	</select>	
	
	<!-- 여행지 찜 삭제용 쿼리 -->
	<delete id="deleteLoveByCondition" parameterType="Love">
		delete from tb_love
		where user_id = #{ userId }
		<choose>
	        <when test="accoId != null">AND acco_id = #{accoId}</when>
	        <when test="restId != null">AND rest_id = #{restId}</when>
	        <when test="attrId != null">AND attr_id = #{attrId}</when>
  		</choose>
	</delete>
	
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		
	<!-- 로그 찜 등록용 쿼리 -->
	<insert id="insertLogLove" parameterType="Love">
		insert into tb_love (LOG_ID, USER_ID)
		values ( #{logId}, #{userId})
	</insert>
	
	<!-- 로그 찜 개수 조회 -->
	<select id="getLogLoveCount" resultType="int">
    	select count(*) from tb_love
	    where log_id = #{logId}
	</select> 	
	
	<!-- 로그 찜 중복 확인용 쿼리 -->
	<select id="selectLogLoveExists" parameterType="Love" resultType="int">
	    select count(*)
	    from tb_love
	    where user_id = #{userId}
	    <if test="logId != 0">
        	AND log_id = #{logId}
   		</if>
	</select>

	<!-- 로그 찜 삭제용 쿼리 -->
	<delete id="deleteLoveByLogId" parameterType="Love">
		delete from tb_love
		where user_id = #{ userId }
		<if test="logId != 0">
    	    AND log_id = #{logId}
    	</if>
	</delete>
	
	<!-- 전체 찜 리스트 조회 -->
    <select id="selectAllLoveList" resultMap="resultList" parameterType="string">
        SELECT *
        FROM tb_love
        WHERE user_id = #{userId}
          AND (
              acco_id IS NOT NULL
              OR rest_id IS NOT NULL
              OR attr_id IS NOT NULL
              OR log_id IS NOT NULL
          )
        ORDER BY love_id DESC
    </select>
	
	<!-- 여행지 찜 리스트 조회용 쿼리 -->
	<select id="selectPlaceLoveList" resultMap="resultList" parameterType="string">
	    SELECT *
	    FROM tb_love
	    WHERE user_id = #{userId}
	      AND (attr_id IS NOT NULL OR acco_id IS NOT NULL OR rest_id IS NOT NULL)
	      ORDER BY love_id DESC
	</select>

	<!-- 로그 찜 리스트 조회용 쿼리 -->
	<select id="selectLogLoveList" resultType="Love">
	    SELECT *
	    FROM tb_love
	    WHERE user_id = #{userId}
	    AND log_id IS NOT NULL
	    ORDER BY love_id DESC
	</select>
	
	
</mapper>